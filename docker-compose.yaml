version: '3'
services:
  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs
    networks:
      - mns
    ports:
      - '5001'
    volumes:
      - './ipfs/data:/data/ipfs'
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    networks:
      - mns
    ports:
      - 5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
  mysql:
    image: mariadb:latest
    container_name: mysql
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    restart: always
    networks:
      - mns
  graph_node:
    container_name: graph_node
    image: 'graphprotocol/graph-node:latest'
    networks:
      - mns
    ports:
      - '9000'
      - '9001'
      - '9020'
      - '9030'
      - '9040'
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - '172.21.0.1:host-gateway'
    environment:
      postgres_pass: ${POSTGRES_PASSWORD}
      postgres_user: ${POSTGRES_USER}
      postgres_host: ${POSTGRES_HOST}
      postgres_db: ${POSTGRES_DB}
      ethereum: ${ETHEREUM}
      ipfs: ${IPFS}
      GRAPH_LOG: ${GRAPH_LOG}
      GRAPH_ALLOW_NON_DETERMINISTIC_IPFS: ${GRAPH_ALLOW_NON_DETERMINISTIC_IPFS}
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: ${GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH}
      GRAPH_POI_ACCESS_TOKEN: ${GRAPH_POI_ACCESS_TOKEN}
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
        - 16543:80
    networks:
      - mns 
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  metadata:
    container_name: metadata
    build: https://github.com/monad-ns/mns-metadata-service.git
    ports:
      - '8080:8080'
    networks:
      - mns
    restart: always
    environment:
      NODE_PROVIDER_URL: ${NODE_PROVIDER_URL}
      GRAPH_API_URL: ${GRAPH_API_URL}
      ADDRESS_ETH_REGISTRY: ${ADDRESS_ETH_REGISTRY}
      ADDRESS_ETH_REGISTRAR: ${ADDRESS_ETH_REGISTRAR}
  wordpress:
    image: wordpress:latest
    container_name: wordpress
    volumes:
      - ./wordpress:/var/www/html
    environment:
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG}
      WORDPRESS_CONFIG_EXTRA: "${WORDPRESS_CONFIG_EXTRA}"
    depends_on:
      - mysql
      - phpmyadmin 
    restart: always
    ports:
      - 8081:80
    networks:
      - mns
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    depends_on:
      - mysql 
    restart: always
    ports:
      - 8180:80
    environment:
      PMA_HOST: ${PMA_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - mns
  nginx:
    container_name: nginx
    image: 'nginx:latest'
    restart: always
    depends_on:
      - graph_node
      - wordpress
      - metadata
      - phpmyadmin
      - pgadmin
    networks:
      - mns
    ports:
      - '80:80'
      - '443:80'
    volumes:
      - './nginx/conf.d:/etc/nginx/conf.d'
      - './dist:/usr/share/nginx/html'
networks:
  mns: null
